'''
7. SNTP
Ограничение времени	1 секунда
Ограничение памяти	64Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Для того чтобы компьютеры поддерживали актуальное время, они могут обращаться к серверам точного времени SNTP (Simple Network Time Protocol). К сожалению, компьютер не может просто получить время у сервера, потому что информация по сети передаётся не мгновенно: пока сообщение с текущим временем дойдёт до компьютера, оно потеряет свою актуальность. Протокол взаимодействия клиента (компьютера, запрашивающего точное время) и сервера (компьютера, выдающего точное время) выглядит следующим образом:

1. Клиент отправляет запрос на сервер и запоминает время отправления A (по клиентскому времени).

2. Сервер получает запрос в момент времени B (по точному серверному времени) и отправляет клиенту сообщение, содержащее время B.

3. Клиент получает ответ на свой запрос в момент времени C (по клиентскому времени) и запоминает его. Теперь клиент, из предположения, что сетевые задержки при передаче сообщений от клиента серверу и от сервера клиенту одинаковы, может определить и установить себе точное время, используя известные значения A, B, C.

Вам предстоит реализовать алгоритм, с точностью до секунды определяющий точное время для установки на клиенте по известным A, B и C. При необходимости округлите результат до целого числа секунд по правилам арифметики (в меньшую сторону, если дробная часть числа меньше 1/2, иначе в большую сторону).

Возможно, что, пока клиент ожидал ответа, по клиентскому времени успели наступить новые сутки, однако известно, что между отправкой клиентом запроса и получением ответа от сервера прошло менее 24 часов.

Формат ввода
Программа получает на вход три временные метки A, B, C, по одной в каждой строке. Все временные метки представлены в формате «hh:mm:ss», где «hh» – это часы, «mm» – минуты, «ss» – секунды. Часы, минуты и секунды записываются ровно двумя цифрами каждое (возможно, с дополнительными нулями в начале числа).

Формат вывода
Программа должна вывести одну временную метку в формате, описанном во входных данных, – вычисленное точное время для установки на клиенте. В выводе не должно быть пробелов, пустых строк в начале вывода.
'''
A = list(map(int,input().split(':')))
B = list(map(int,input().split(':')))
C = list(map(int,input().split(':'))) 

a = A[0]*3600 + A[1]*60 + A[2]
b = B[0]*3600 + B[1]*60 + B[2]
c = C[0]*3600 + C[1]*60 + C[2] 
if c - a > 0:  
    b += int(0.5 + (c-a)/2) 
else: 
    temp = 86400 - (a-c) 
    delay = int(0.5 + temp/2) 
    b += delay 

h = str(b//3600) if len(str(b//3600)) == 2 else '0' + str(b//3600)
if int(h) > 23:
    h = str(int(h) - 24) if len(str(int(h) - 24)) == 2 else '0' + str(int(h) - 24)
m = str((b%3600)//60) if len(str((b%3600)//60)) == 2 else '0' + str((b%3600)//60)
if int(m) > 59:
    m = str(int(m) - 60) if len(str(int(m) - 60)) == 2 else '0' + str(int(m) - 60)
s = str((b%3600)%60) if len(str((b%3600)%60)) == 2 else '0' + str((b%3600)%60)
ret = [h,m,s]
time = ':'.join(ret) 
print(time)
