'''
3. Коллекционер Диего
Ограничение времени	2 секунды
Ограничение памяти	256Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt

Диего увлекается коллекционированием наклеек. На каждой из них написано число, и каждый коллекционер мечтает собрать наклейки со всеми встречающимися числами.
Диего собрал N наклеек, некоторые из которых, возможно, совпадают. Как-то раз к нему пришли K коллекционеров. i-й из них собрал все наклейки с номерами не меньшими, чем pi. 
Напишите программу, которая поможет каждому из коллекционеров определить, сколько недостающих ему наклеек есть у Диего. Разумеется, гостей Диего не интересуют повторные экземпляры наклеек.

Формат ввода
В первой строке содержится единственное число N (0 ≤ N ≤ 100 000) — количество наклеек у Диего.
В следующей строке содержатся N целых неотрицательных чисел не обязательно различных) — номера наклеек Диего. Все номера наклеек не превосходят 109.
В следующей строке содержится число K (0 ≤ K ≤ 100 000) — количество коллекционеров, пришедших к Диего. В следующей строке содержатся K целых чисел pi (0 ≤ pi ≤ 109), 
где pi — наименьший номер наклейки, не интересующий i-го коллекционера.

Формат вывода
Для каждого коллекционера в отдельной строке выведите количество различных чисел на наклейках, которые есть у Диего, но нет у этого коллекционера.
'''
N = int(input())
nums = list(set(input().split(' ')))
K = int(input())
pi = input().split(' ')

for i in range(len(nums)):
	nums[i] = int(nums[i])
for i in range(len(pi)):
	pi[i] = int(pi[i]) 
 
nums = sorted(nums)

def binsearch(l, r, array, val):
	if l == r:
		return l
	else:
		m = (l+r)//2 
		if array[m] >= val:
			return binsearch(l, m, array, val)
		else:
			return binsearch(m+1, r, array, val)
len_nums = len(nums)

if len_nums < 2:
    for i in pi:
        print(1) if nums[0] < i else print(0)
else:
    for i in pi:
        ind = binsearch(0, len_nums-1, nums, i)
        print(ind+1) if nums[ind] < i else print(ind)
